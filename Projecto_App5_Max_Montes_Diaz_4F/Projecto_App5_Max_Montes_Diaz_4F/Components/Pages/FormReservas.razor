@page "/reservas/nueva"
@page "/reservas/editar/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioReservas _repositorio

<h2>Carga de datos</h2>

<EditForm Model="Reserva" FormName="reservas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Usuario</lable>
        <div class="col-sm-10">
            <InputText class="form-control" @bind-Value="Reserva.Usuario" />
            <ValidationMessage For="() => Reserva.Usuario" />
        </div>
    </div>

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Vehiculo</lable>
        <div class="col-sm-10">
            <InputText class="form-control" @bind-Value="Reserva.Vehiculo" />
            <ValidationMessage For="() => Reserva.Vehiculo" />
        </div>
    </div>

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Fecha de prestamo</lable>
        <div class="col-sm-10">
            <InputDate class="form-control" @bind-Value="Reserva.FechaPrestamo" />
            <ValidationMessage For="() => Reserva.FechaPrestamo" />
        </div>
    </div>

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Fecha de fin</lable>
        <div class="col-sm-10">
            <InputDate class="form-control" @bind-Value="Reserva.FechaFin" />
            <ValidationMessage For="() => Reserva.FechaFin" />
        </div>
    </div>

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Monto</lable>
        <div class="col-sm-10">
            <InputNumber class="form-control" @bind-Value="Reserva.Monto" />
            <ValidationMessage For="() => Reserva.Monto" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string mensaje = "";
    private Reservas? Reserva = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Reserva = await _repositorio.Get(Id);
            mensaje = "Editar";
        }
        else
        {
            mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (Id != 0)
        {
            await _repositorio.Update(Id, Reserva);
        }
        else
        {
            await _repositorio.Add(Reserva!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/reservas");
    }

}