@page "/usuarios/nueva"
@page "/usuarios/editar/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioUsuarios _repositorio

<h2>Carga de datos</h2>

<EditForm Model="Usuario" FormName="usuarios" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Nombre</lable>
        <div class="col-sm-10">
            <InputText class="form-control" @bind-Value="Usuario.Nombre" />
            <ValidationMessage For="() => Usuario.Nombre" />
        </div>
    </div>

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Numero de telefono</lable>
        <div class="col-sm-10">
            <InputNumber class="form-control" @bind-Value="Usuario.NumeroTelefono" />
            <ValidationMessage For="() => Usuario.NumeroTelefono" />
        </div>
    </div>

    <div class="row mb-3">
        <lable class="col-sm-2 col-form-label">Usuario</lable>
        <div class="col-sm-10">
            <InputText class="form-control" @bind-Value="Usuario.Direccion" />
            <ValidationMessage For="() => Usuario.Direccion" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string mensaje = "";
    private Usuarios? Usuario = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Usuario = await _repositorio.Get(Id);
            mensaje = "Editar";
        }
        else
        {
            mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (Id != 0)
        {
            await _repositorio.Update(Id, Usuario);
        }
        else
        {
            await _repositorio.Add(Usuario!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/usuarios");
    }

}